
課題1,3(オーバフロー判定含む)
test_alu
ALU(AND, 0, 0, 0) => (0, 0)
ALU(AND, 0, 1, 0) => (0, 0)
ALU(AND, 1, 0, 0) => (0, 0)
ALU(AND, 1, 1, 0) => (1, 1)
ALU(AND, 0, 0, 1) => (0, 0)
ALU(AND, 0, 1, 1) => (0, 1)
ALU(AND, 1, 0, 1) => (0, 1)
ALU(AND, 1, 1, 1) => (1, 1)
ALU(OR, 0, 0, 0) => (0, 0)
ALU(OR, 0, 1, 0) => (1, 0)
ALU(OR, 1, 0, 0) => (1, 0)
ALU(OR, 1, 1, 0) => (1, 1)
ALU(OR, 0, 0, 1) => (0, 0)
ALU(OR, 0, 1, 1) => (1, 1)
ALU(OR, 1, 0, 1) => (1, 1)
ALU(OR, 1, 1, 1) => (1, 1)
ALU(ADD, 0, 0, 0) => (0, 0)
ALU(ADD, 0, 1, 0) => (1, 0)
ALU(ADD, 1, 0, 0) => (1, 0)
ALU(ADD, 1, 1, 0) => (0, 1)
ALU(ADD, 0, 0, 1) => (1, 0)
ALU(ADD, 0, 1, 1) => (0, 1)
ALU(ADD, 1, 0, 1) => (0, 1)
ALU(ADD, 1, 1, 1) => (1, 1)

test_alu(100, 200)
ALU32(AND, 100, 200) => 64
val1 = 00000000000000000000000001100100
val2 = 00000000000000000000000011001000
ans  = 00000000000000000000000001000000
ALU32(OR, 100, 200) => 236
val1 = 00000000000000000000000001100100
val2 = 00000000000000000000000011001000
ans  = 00000000000000000000000011101100
ALU32(ADD, 100, 200) => (300, 0)
val1 = 00000000000000000000000001100100
val2 = 00000000000000000000000011001000
ans  = 00000000000000000000000100101100
check overflow 0
ALU32(SUB, 100, 200) => (-100, 0, 0)
val1 = 00000000000000000000000001100100
val2 = 00000000000000000000000011001000
ans  = 11111111111111111111111110011100
check-zero is 0
check overflow 0
ALU32(SLT, 100, 200) => 1

test_alu(1, 0)
val1 = 00000000000000000000000001100100
val2 = 00000000000000000000000011001000
ans  = 00000000000000000000000000000001
ALU32(AND, 1, 0) => 0
val1 = 00000000000000000000000000000001
val2 = 00000000000000000000000000000000
ans  = 00000000000000000000000000000000
ALU32(OR, 1, 0) => 1
val1 = 00000000000000000000000000000001
val2 = 00000000000000000000000000000000
ans  = 00000000000000000000000000000001
ALU32(ADD, 1, 0) => (1, 0)
val1 = 00000000000000000000000000000001
val2 = 00000000000000000000000000000000
ans  = 00000000000000000000000000000001
check overflow 0
ALU32(SUB, 1, 0) => (1, 0, 0)
val1 = 00000000000000000000000000000001
val2 = 00000000000000000000000000000000
ans  = 00000000000000000000000000000001
check-zero is 0
check overflow 0
ALU32(SLT, 1, 0) => 0
val1 = 00000000000000000000000000000001
val2 = 00000000000000000000000000000000
ans  = 00000000000000000000000000000000

test_alu(2147463647, 30000)
ALU32(AND, 2147463647, 30000) => 12560
val1 = 01111111111111111011000111011111
val2 = 00000000000000000111010100110000
ans  = 00000000000000000011000100010000
ALU32(OR, 2147463647, 30000) => 2147481087
val1 = 01111111111111111011000111011111
val2 = 00000000000000000111010100110000
ans  = 01111111111111111111010111111111
ALU32(ADD, 2147463647, 30000) => (-2147473649, 1)
val1 = 01111111111111111011000111011111
val2 = 00000000000000000111010100110000
ans  = 10000000000000000010011100001111
check overflow 1
ALU32(SUB, 2147463647, 30000) => (2147433647, 0, 0)
val1 = 01111111111111111011000111011111
val2 = 00000000000000000111010100110000
ans  = 01111111111111110011110010101111
check-zero is 0
check overflow 0
ALU32(SLT, 2147463647, 30000) => 0
val1 = 01111111111111111011000111011111
val2 = 00000000000000000111010100110000
ans  = 00000000000000000000000000000000

test_alu(2147463647, -30000)
ALU32(AND, 2147463647, -30000) => 2147451088
val1 = 01111111111111111011000111011111
val2 = 11111111111111111000101011010000
ans  = 01111111111111111000000011010000
ALU32(OR, 2147463647, -30000) => -17441
val1 = 01111111111111111011000111011111
val2 = 11111111111111111000101011010000
ans  = 11111111111111111011101111011111
ALU32(ADD, 2147463647, -30000) => (2147433647, 0)
val1 = 01111111111111111011000111011111
val2 = 11111111111111111000101011010000
ans  = 01111111111111110011110010101111
check overflow 0
ALU32(SUB, 2147463647, -30000) => (-2147473649, 0, 1)
val1 = 01111111111111111011000111011111
val2 = 11111111111111111000101011010000
ans  = 10000000000000000010011100001111
check-zero is 0
check overflow 1
ALU32(SLT, 2147463647, -30000) => 1
val1 = 01111111111111111011000111011111
val2 = 11111111111111111000101011010000
ans  = 00000000000000000000000000000001

test_alu(-2147463647, 30000)
ALU32(AND, -2147463647, 30000) => 17440
val1 = 10000000000000000100111000100001
val2 = 00000000000000000111010100110000
ans  = 00000000000000000100010000100000
ALU32(OR, -2147463647, 30000) => -2147451087
val1 = 10000000000000000100111000100001
val2 = 00000000000000000111010100110000
ans  = 10000000000000000111111100110001
ALU32(ADD, -2147463647, 30000) => (-2147433647, 0)
val1 = 10000000000000000100111000100001
val2 = 00000000000000000111010100110000
ans  = 10000000000000001100001101010001
check overflow 0
ALU32(SUB, -2147463647, 30000) => (2147473649, 0, 1)
val1 = 10000000000000000100111000100001
val2 = 00000000000000000111010100110000
ans  = 01111111111111111101100011110001
check-zero is 0
check overflow 1
ALU32(SLT, -2147463647, 30000) => 0
val1 = 10000000000000000100111000100001
val2 = 00000000000000000111010100110000
ans  = 00000000000000000000000000000000

test_alu(-2147463647, -30000)
ALU32(AND, -2147463647, -30000) => -2147481088
val1 = 10000000000000000100111000100001
val2 = 11111111111111111000101011010000
ans  = 10000000000000000000101000000000
ALU32(OR, -2147463647, -30000) => -12559
val1 = 10000000000000000100111000100001
val2 = 11111111111111111000101011010000
ans  = 11111111111111111100111011110001
ALU32(ADD, -2147463647, -30000) => (2147473649, 1)
val1 = 10000000000000000100111000100001
val2 = 11111111111111111000101011010000
ans  = 01111111111111111101100011110001
check overflow 1
ALU32(SUB, -2147463647, -30000) => (-2147433647, 0, 0)
val1 = 10000000000000000100111000100001
val2 = 11111111111111111000101011010000
ans  = 10000000000000001100001101010001
check-zero is 0
check overflow 0
ALU32(SLT, -2147463647, -30000) => 1
val1 = 10000000000000000100111000100001
val2 = 11111111111111111000101011010000
ans  = 00000000000000000000000000000001


課題2
表
|  演算  |  a  |  b  |  オーバフローを起こした時の演算結果s  |  binvert  |  a(msb)  |  b(msb)  |  s(msb)  |
|  a+b  | >=0 | >=0 |              <0                 |     0     |    0     |     0    |     1     |
|  a+b  |  <0 |  <0 |             >=0                 |     0     |    1     |     1    |     0     |
|  a-b  | >=0 | <0  |              <0                 |     1     |    0     |     1    |     1     |
|  a-b  | <0  | >=0 |             >=0                 |     1     |    1     |     0    |     0     |

bv = binvert
check_overflow = (!bv * !a * !b * s) + (!bv * a * b * !s) + (bv * !a * b * s) + (bv * a * !b * !s)


よくできた回路だと深く感動した。ALU発明した人すごすぎると思った。
